一、内存布局
1.程序计数器：
    此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。
2.Java虚拟机栈
    栈帧
    1)当线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；
    2)当虚拟机进行动态扩展时无法申请到足够内存，会抛出OutOfMemoryError异常。
3.本地方法栈
    为虚拟机使用到的Native方法服务。
    本地方法栈区域也会抛出StackOverflowError和OutOfMemoryError。
4.Java堆(GC堆)
    被所有线程共享的一块内存区域，在虚拟机启动时创建。GC管理的主要区域。
    虚拟机都是按照可扩展来实现的(通过-Xmx和-Xms控制)。
    当堆中没有内存完成实例分配，并堆也无法再扩展时，会抛出OutOfMemoryError异常。
5.方法区
    各个线程共享的内存区域，用于存储已被虚拟机加载的类信息、常量、编译后的代码等。
    当方法区无法满足内存分配需求时，将抛出OutOfMemoryError异常。
6.运行时常量池
    方法区的一部分。
    当常量池无法再申请到内存时会抛出OutOfMemoryError异常。
7.直接内存
    NIO类，一种基于通道和缓冲区的I/O方式，使用Native函数库直接分配堆外内存，然后被Java堆中的DirectByteBuffer对象作为这块内存的引用进行操作。避免了在Java堆中来回复制数据从而提高性能。
    内存受本机总内存大小及处理器寻址空间的限制。
    当各个内存区域总和大于物理内存限制，会在动态扩展时出现OutOfMemoryError异常。


二、内存泄露与内存溢出
    内存泄露指由于疏忽或错误造成程序未能释放已经不再使用的内存的情况。
内存泄露并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，失 去了对该段内存的控制，因而造成了内存的浪费。
    内存溢出指程序运行所需内存超过了机器所能提供的内存。






































